name: Unzip .mlmodel and Create Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Fetch LFS files
        run: git lfs fetch --all

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      # Create directory for extracted contents
      - name: Create extraction directory
        run: mkdir -p extracted_model

      # Check if file exists and attempt to unzip, with fallback
      - name: Extract .mlmodel file
        run: |
          MODEL_PATH="model/coreml_model.mlmodel"
          if [ ! -f "$MODEL_PATH" ]; then
            echo "Error: Model file not found at $MODEL_PATH"
            exit 1
          fi
          # Check if it's a zip file by looking at file signature
          if file "$MODEL_PATH" | grep -q "Zip archive"; then
            unzip "$MODEL_PATH" -d extracted_model || {
              echo "Warning: Not a valid ZIP, copying raw file instead"
              cp "$MODEL_PATH" extracted_model/
            }
          else
            echo "File is not a ZIP archive, copying raw file"
            cp "$MODEL_PATH" extracted_model/
          fi

      # List extracted contents for debugging
      - name: List extracted contents
        run: ls -la extracted_model/

      # Zip the extracted contents
      - name: Zip the extracted contents
        run: zip -r model_contents.zip extracted_model

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./model_contents.zip
          asset_name: model_contents.zip
          asset_content_type: application/zip